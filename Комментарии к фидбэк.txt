Общие замечания:
 	1) Всегда указывать модификатор доступа переменным и методам
 	2) Название класса должно совпадать с названием файла
 	3) Названия методов пишутся с маленькой буквы

Task 1: jar файл не запускается
Недостатки:
	Важные:
	1) Использовал не восьмую джаву
	2) Логика неверная. (Попробовать запустить с аргументами 1 1)
	
	Незначительные:
	1) Вместо List<Integer> проще использовать StringBuilder, в конце не придется использовать цикл 		   для вывода на консоль
	2) Объявлять переменные в том месте, где предполагается их использование
	3) Давать переменным осмысленные названия
	4) Попробовать поискать другое, более оптимальное решение

	///////Комментарий к Task 1: добавил комментарии и дополнительные проверки.
Теперь если один из входных аргументов равен 1, метод не выполняется, так как в этом нет необходимости, сразу выдается результат. 
При любых входных значениях больше 1 программа работает корректно.
По пункту 1(незначительные) – в данном случае можно обойтись вообще без дополнительной переменной, если результат сразу выводить в консоль. 
Удалил List<Integer>.
	
Task 2: jar файл не запускается. Логика в исходниках верная.
Недостатки:
	Важные:
	1) Использовал не восьмую джаву
	2) Запустить программу без аргументов, попробовать объяснить вывод (Вывод: 0 1)
	3) Объяснить, что происходит при объявлении массива. Например new int[5]

	///////Комментарий к Task 2: По пункту 2 понял свою ошибку, такой вывод дает метод getMessage, 
который в свою очередь получает исключение ArrayIndexOutOfBoundsException : 0 (а затем 1, так как аргументов заявлено 2)
Поправил, добавил проверку на наличие аргументов вместо обработки исключения в методе.
По пункту 3: массив new float[3] при таком способе инициализации заполняется тремя нулями (точнее 0.0), что неправильно в данном случае. 
Поправил, заменил массив на класс ArrayList.
	
Task 3: не сделано
	///////Комментарий: я пробовал менять непосредственно JSONObject, не передавая содержимое в другие классы, 
при помощи метода put(K,V) из библиотеки simple-json. Метод работает корректно, но я никак не могу разобраться, почему не проходит проверка условия:
*примерный код*:
for(test:tests){
	for (value:values){
		if (test.get(“id”) == value.get(“id”)
		test.put(“value”, value.get(“value”);}}
Условие выполняется всего 5 раз, не могу понять, в чем причина

Task 4: jar файл не запускается
Недостатки: 
	Важные:
	1) Использовал не восьмую джаву
	
	Незначительные:
	1) Поискать более оптимальное решение, вместо использования перебора

